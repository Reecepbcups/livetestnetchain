name: testnet

# typically this would only be on main / tagged releases
on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
    GO_VERSION: 1.21.0
    TESTNET_FILE: "ibc-testnet" # in the chains/ dir

permissions:
  contents: read
  issues: write

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
        # TODO: shut down any current instances?
        # if there is a current instance already running, allow for it to be stopped & re-started? (local-ic not the entire box)

      - uses: actions/checkout@v3

      - uses: TimDaub/hetzner-cloud-deploy-server-action@v2
        with:
          server-name: "gh-actions-server-1" # no spaces here. Use tag/commit name
          server-image: "ubuntu-22.04"
          server-type: "cpx21"
          ssh-key-name: "reece-hetzner"
          delete-server: false
          # may need to do floating IPs for shared use & static IP usage?
          startup-timeout: 40000 # ms
          # https://github.com/Reecepbcups/livetestnetchain/settings/secrets/actions/new
          hcloud-token: ${{ secrets.HCLOUD_TOKEN }}

      - uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - run: mkdir -p ~/.ssh/ && ssh-keyscan -H $SERVER_IPV4 >> ~/.ssh/known_hosts
      - run: ssh root@$SERVER_IPV4 touch validate_working
      - run: ssh root@$SERVER_IPV4 ls

      - name: Set server IP
        run: echo "SERVER_IPV4_ADDR=$SERVER_IPV4" >> $GITHUB_ENV
      - name: Set sha
        run: echo "GITHUB_SHA=${{github.sha}}" >> $GITHUB_ENV

      - uses: JasonEtco/create-an-issue@v2.9.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            assignees: ${{ github.actor }}
            filename: .github/testnet.md
            update_existing: true

      # testnet time
      # - run: git clone https://github.com/Reecepbcups/livetestnetchain
      # sudo add-apt-repository ppa:longsleep/golang-backports -y
      # sudo DEBIAN_FRONTEND=noninteractive apt -y install make golang-1.22 gcc jq bison
      # alias go=/usr/lib/go-1.22/bin/go
      - run: |
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt -y install make gcc jq bison

          # Go install
          wget https://go.dev/dl/go1.22.1.linux-amd64.tar.gz
          rm -rf /usr/local/go && tar -C /usr/local -xzf go1.22.1.linux-amd64.tar.gz
          echo "export PATH=$PATH:/usr/local/go/bin" >> ~/.bashrc
          export PATH=$PATH:/usr/local/go/bin

          # Docker
          sudo apt-get install ca-certificates curl
          sudo install -m 0755 -d /etc/apt/keyrings
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          sudo chmod a+r /etc/apt/keyrings/docker.asc
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get -y install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

          # install local-ic
          wget https://github.com/strangelove-ventures/interchaintest/releases/download/v8.2.0/local-ic && chmod +x local-ic
          sudo mv local-ic /usr/local/bin

          git clone https://github.com/strangelove-ventures/heighliner.git
          go build
          mv heighliner /usr/local/bin && chmod +x /usr/local/bin/heighliner

          # Clone
          git clone https://github.com/${{ github.repository }}.git chain && cd chain

          # builds the docker image
          make local-image

          # start the testnet
          local-ic chains # just debugging
          local-ic start ${{env.TESTNET_FILE}}