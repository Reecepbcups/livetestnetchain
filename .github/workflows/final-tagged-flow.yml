# Launch a testnet after tagging :D

name: Tagged testnet

on:
    # release:
    #   types: [published, created, edited]
    push:
      tags:
      - 'v[0-9]+.[0-9]+.[0-9]+' # ignore rc

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
    GO_VERSION: 1.21.0
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}
    # TODO: change this to the name of your repo
    REPO_NAME: livetestnetchain

jobs:
  public-testnet-image:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: 'Setup jq'
        uses: dcarbone/install-jq-action@v2
        with:
          version: '1.7'
          force: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # all lowercase ghcr registry
      - run: |
         DOCKER_REGISTRY=`echo "${{ env.REGISTRY }}/${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]'`
         echo "DOCKER_REGISTRY=$DOCKER_REGISTRY" >> $GITHUB_ENV

      - name: Parse tag
        id: tag
        run: |
          # v0.0.1
          VERSION=$(echo ${{ github.ref_name }} | sed "s/v//")
          # 0.0.1
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # build and publish package to ghcr (public) with codebase remaining private
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # TODO: update package to be public in repo settings
      # TODO: also push up normal ref_name tag (v0.0.1) along with local
      - name: Build and push Docker image
        uses: strangelove-ventures/heighliner-build-action@v1.0.0
        with:
          # v0.0.1
          git-ref: ${{ github.ref_name }}
          # tag as local so the testnet can work as expected
          tag: local
          chain: ${{ env.REPO_NAME}}
          dockerfile: cosmos
          registry: ${{ env.DOCKER_REGISTRY }}
          build-target: |
            cd ..
            make install
          local: true
          binaries: |
            - /go/bin/simd
          build-env: |
            - BUILD_TAGS=muslc

  launch-testnet:
    needs: public-testnet-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: TimDaub/hetzner-cloud-deploy-server-action@v2
        with:
          server-name: "gh-actions-tn-${{github.sha}}"
          server-image: "ubuntu-22.04"
          # server-type: "cpx21" # shared
          server-type: "ccx23" # dedicated
          ssh-key-name: "reece-hetzner"
          delete-server: false
          # may need to do floating IPs for shared use & static IP usage?
          startup-timeout: 40000 # ms
          # https://github.com/Reecepbcups/livetestnetchain/settings/secrets/actions/new
          hcloud-token: ${{ secrets.HCLOUD_TOKEN }}

      - name: Set server address & git sha hash
        run: |
          mkdir -p ~/.ssh/ && ssh-keyscan -H $SERVER_IPV4 >> ~/.ssh/known_hosts
          echo "SERVER_IPV4_ADDR=$SERVER_IPV4" >> $GITHUB_ENV
          echo "GITHUB_SHA=${{github.sha}}" >> $GITHUB_ENV

      - uses: JasonEtco/create-an-issue@v2.9.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            assignees: ${{ github.actor }}
            filename: .github/testnet.md
            update_existing: true

      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.SERVER_IPV4_ADDR }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            whoami

            # nice to have
            function docker-killall() {
              docker kill $(docker ps -q)
            }

            sudo apt-get update
            sudo DEBIAN_FRONTEND=noninteractive apt -y install make gcc jq bison ca-certificates curl

            wget https://go.dev/dl/go1.22.1.linux-amd64.tar.gz
            sudo rm -rf /usr/local/go && sudo tar -C /usr/local -xzf go1.22.1.linux-amd64.tar.gz
            echo "export PATH=$PATH:/usr/local/go/bin" >> ~/.bashrc
            export PATH=$PATH:/usr/local/go/bin
            bash # idk if I can use this or not

            sudo DEBIAN_FRONTEND=noninteractive apt-get remove -y containerd.io
            sudo DEBIAN_FRONTEND=noninteractive apt-get -y install docker.io docker-compose
            sudo apt-get update

            wget https://github.com/strangelove-ventures/interchaintest/releases/download/v8.2.0/local-ic && chmod +x local-ic
            sudo mv local-ic /usr/local/bin

            git clone https://github.com/strangelove-ventures/heighliner.git && cd heighliner
            go build && chmod +x heighliner
            sudo mv heighliner /usr/local/bin

            cd ~/
            git clone https://github.com/${{ github.repository }}.git chain && cd chain
            make local-image

            # TODO: service file would be 10x better :) (put in ictest local-ic dir for setup too)
            # auth_key should be a github env secret
            sudo screen -S testnet -d -m local-ic start ibc-testnet --api-address=0.0.0.0 --api-port=8080 --auth-key=""