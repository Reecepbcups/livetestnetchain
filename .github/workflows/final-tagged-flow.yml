# Launch a testnet after tagging :D

name: Tagged testnet

on:
    # release:
    #   types: [published, created, edited]
    push:
      tags:
      - 'v[0-9]+.[0-9]+.[0-9]+' # ignore rc

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
    GO_VERSION: 1.21.0
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}
    # TODO: change this to the name of your repo
    REPO_NAME: livetestnetchain

jobs:
  public-testnet-image:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: 'Setup jq'
        uses: dcarbone/install-jq-action@v2
        with:
          version: '1.7'
          force: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # all lowercase ghcr registry
      - run: |
         DOCKER_REGISTRY=`echo "${{ env.REGISTRY }}/${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]'`
         echo "DOCKER_REGISTRY=$DOCKER_REGISTRY" >> $GITHUB_ENV

      - name: Parse tag
        id: tag
        run: |
          VERSION=$(echo ${{ github.ref_name }} | sed "s/v//")
          MAJOR_VERSION=$(echo $VERSION | cut -d '.' -f 1)
          MINOR_VERSION=$(echo $VERSION | cut -d '.' -f 2)
          PATCH_VERSION=$(echo $VERSION | cut -d '.' -f 3)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "MAJOR_VERSION=$MAJOR_VERSION" >> $GITHUB_ENV
          echo "MINOR_VERSION=$MINOR_VERSION" >> $GITHUB_ENV
          echo "PATCH_VERSION=$PATCH_VERSION" >> $GITHUB_ENV

          echo "TAG=v${{ env.MAJOR_VERSION }}.${{ env.MINOR_VERSION }}.${{ env.PATCH_VERSION }}" >> $GITHUB_ENV

      # build and publish package to ghcr (public) with codebase remaining private
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # # TODO: update package to be public in repo settings
      - name: Build and push Docker image
        uses: strangelove-ventures/heighliner-build-action@v1.0.0
        with:
          # v0.0.1
          git-ref: ${{ env.TAG }}
          chain: ${{ env.REPO_NAME}}
          dockerfile: cosmos
          registry: ${{ env.DOCKER_REGISTRY }}
          build-target: |
            cd ..
            make install
          local: true
          build-env: |
            - BUILD_TAGS=muslc
          binaries: |
            - /go/bin/simd